buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }

    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'com.moowork.node'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

configurations { codacy }

project.ext {
    cucumberVersion = '2.3.1'
    junitVersion = '4.12'
}

dependencies {
    compile "org.apache.commons:commons-lang3:3.0"
    compile "org.springframework.boot:spring-boot-starter-web"
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'com.jayway.jsonpath:json-path'
    testCompile 'io.cucumber:cucumber-java:' + cucumberVersion
    testCompile 'io.cucumber:cucumber-junit:' + cucumberVersion
    testCompile 'junit:junit:' + junitVersion
    codacy 'com.github.codacy.codacy-coverage-reporter:codacy-coverage-reporter:4.0.1'
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

bootJar {
    baseName = 'JChess'
    version =  '1.0.0'
}

task simpleCucumberReportInstall(type: NpmTask) {
    args = ['--prefix', 'cucumber/', 'install']
}

task fixVulnerabilities(type: NpmTask, dependsOn: simpleCucumberReportInstall){
    args = ['--prefix', 'cucumber/', 'audit', 'fix']
}

task cucumberReportInstall(type: Exec, dependsOn: fixVulnerabilities){
    commandLine 'echo', "'Cucumber-report-html installed and npm vulnerability fixed (if any)'"
}

task cucumberReport(type: NodeTask) {
    script = file('cucumber/index.js')
}

task jchess(type: Exec) {
    commandLine 'echo', "'hello jchess'"
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
        html.destination "jacoco"
        csv.enabled false
    }
}

task sendCoverageToCodacy(type: JavaExec, dependsOn: jacocoTestReport) {
    main = "com.codacy.CodacyCoverageReporter"
    classpath = configurations.codacy
    args = [
            "report",
            "-l",
            "Java",
            "-r",
            "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    ]
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
}